<Application x:Class="ToMetric.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ToMetric"
             xmlns:converters="clr-namespace:ToMetric.BindingConversionClasses"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Binding Converters-->
        <converters:CorrectnessToFeedbackColor         x:Key="CorrectnessToFeedbackColor"/>
        <converters:DoubleToPercentageText             x:Key="DoubleToPercentageText"/>
        <converters:HasTextAndHasFocusToHintVisibility x:Key="HasTextAndHasFocusToHintVisibility"/>
        <converters:IsGameToElementVisibility          x:Key="IsGameToElementVisibility"/>
        <!--Colors-->
        <SolidColorBrush x:Key="DarkThemeGray0"   Color="#0f0f0f"/>
        <SolidColorBrush x:Key="DarkThemeGray1"   Color="#1d1d1d"/>
        <SolidColorBrush x:Key="DarkThemeGray2"   Color="#252525"/>
        <SolidColorBrush x:Key="DarkThemeGray3"   Color="#444"/>
        <SolidColorBrush x:Key="DarkThemeGray4"   Color="#555"/>
        <!--Styles-->
        <Style x:Key="DarkButton" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background"      Value="{StaticResource DarkThemeGray3}"/>
            <Setter Property="Cursor"          Value="Hand"/>
            <Setter Property="FontSize"        Value="16pt"/>
            <Setter Property="Foreground"      Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DarkThemeGray4}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#0f0f0f"/>
                    <Setter Property="Foreground" Value="{StaticResource DarkThemeGray1}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Display" TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource DarkThemeGray3}"/>
            <Setter Property="MaxHeight"  Value="128"/>
        </Style>
        <Style x:Key="DisplayBorderCenter" TargetType="Border">
            <Setter Property="BorderBrush"     Value="White"/>
            <Setter Property="BorderThickness" Value="2 4"/>
        </Style>
        <Style x:Key="DisplayBorderLeft" TargetType="Border">
            <Setter Property="BorderBrush"     Value="White"/>
            <Setter Property="BorderThickness" Value="4 4 2 4"/>
        </Style>
        <Style x:Key="DisplayBorderRight" TargetType="Border">
            <Setter Property="BorderBrush"     Value="White"/>
            <Setter Property="BorderThickness" Value="2 4 4 4"/>
        </Style>
        <Style x:Key="DisplayConvertFrom" TargetType="TextBlock">
            <Setter Property="FontSize"      Value="16pt"/>
            <Setter Property="Foreground"    Value="White"/>
            <Setter Property="Padding"       Value="8"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="DisplayConvertFromBorder" TargetType="Border">
            <Setter Property="Background"      Value="{StaticResource DarkThemeGray3}"/>
            <Setter Property="BorderBrush"     Value="White"/>
            <Setter Property="BorderThickness" Value="2 2 1 2"/>
        </Style>
        <Style x:Key="DisplayConvertFromUnit" TargetType="TextBlock">
            <Setter Property="FontSize"      Value="16pt"/>
            <Setter Property="Foreground"    Value="White"/>
            <Setter Property="Padding"       Value="8"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DisplayConvertFromUnitBorder" TargetType="Border">
            <Setter Property="Background"      Value="{StaticResource DarkThemeGray3}"/>
            <Setter Property="BorderBrush"     Value="White"/>
            <Setter Property="BorderThickness" Value="1 2 2 2"/>
        </Style>
        <Style x:Key="DisplayLabel" TargetType="TextBlock">
            <Setter Property="FontSize"            Value="12pt"/>
            <Setter Property="Foreground"          Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Padding"             Value="8"/>
        </Style>
        <Style x:Key="DisplayValue" TargetType="TextBlock">
            <Setter Property="FontSize"            Value="24pt"/>
            <Setter Property="Foreground"          Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment"   Value="Center"/>
        </Style>
        <Style x:Key="FormulaExpander" TargetType="Expander">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="IconLarge" TargetType="Image">
            <Setter Property="Height" Value="16pt"/>
            <Setter Property="Margin" Value="0 5 10 0"/>
        </Style>
        <Style x:Key="MainWindow" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource DarkThemeGray1}"/>
            <Setter Property="Height"     Value="633"/>
            <Setter Property="MinHeight"  Value="320"/>
            <Setter Property="MinWidth"   Value="800"/>
            <Setter Property="Title"      Value="ToMetric"/>
            <Setter Property="Width"      Value="1024"/>
        </Style>
        <Style x:Key="OptionGroup" TargetType="DockPanel">
            <Setter Property="Background" Value="{StaticResource DarkThemeGray3}"/>
            <Setter Property="Margin"     Value="0 16 0 0"/>
        </Style>
        <Style x:Key="OptionGroupHeader" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="16pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding"    Value="8"/>
        </Style>
        <Style x:Key="OptionUnitCheckboxLeft" TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="OptionUnitCheckboxRight" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0 0 8 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="OptionUnitHeaderLeft" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="12pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin"     Value="8 0 0 8"/>
        </Style>
        <Style x:Key="OptionUnitHeaderRight" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="12pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin"     Value="8 0 8 0"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="OptionUnitLabelLeft" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="10pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin"     Value="8 0 0 8"/>
        </Style>
        <Style x:Key="OptionUnitLabelRight" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="10pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin"     Value="8 0 8 0"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="PrecisionLabel" TargetType="TextBlock">
            <Setter Property="FontSize"   Value="12pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding"    Value="8"/>
        </Style>
        <Style x:Key="PrecisionSlider" TargetType="Slider">
            <Setter Property="Margin"     Value="0 8"/>
        </Style>
        <Style x:Key="UserInput" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize"      Value="16pt"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding"       Value="8"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style x:Key="UserInputPlaceholder" TargetType="TextBlock">
            <Setter Property="FontSize"          Value="14pt"/>
            <Setter Property="Foreground"        Value="{StaticResource DarkThemeGray4}"/>
            <Setter Property="Margin"            Value="5,2"/>
            <Setter Property="Padding"           Value="8"/>
            <Setter Property="TextAlignment"     Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!--Templates-->
        <!--Awful hack to get a text hint to work from https://code.msdn.microsoft.com/windowsapps/How-to-add-a-hint-text-to-ed66a3c6-->
        <ControlTemplate x:Key="PlaceHolderInput">
            <Grid Background="{StaticResource DarkThemeGray2}">
                <TextBlock Style="{StaticResource UserInputPlaceholder}" Text="{TemplateBinding local:PlaceholderAttachedProperties.Placeholder}">
                    <TextBlock.Visibility>
                        <MultiBinding Converter="{StaticResource HasTextAndHasFocusToHintVisibility}">
                            <Binding ElementName="Input" Path="Text.IsEmpty" />
                            <Binding ElementName="Input" Path="IsFocused" />
                        </MultiBinding>
                    </TextBlock.Visibility>
                </TextBlock>
                <TextBox Name="Input" Style="{StaticResource UserInput}" ToolTip="{TemplateBinding local:PlaceholderAttachedProperties.Placeholder}"/>
            </Grid>
        </ControlTemplate>
        <!--Override of expander default look-->
        <!--Code from https://social.msdn.microsoft.com/Forums/vstudio/en-US/e6075df4-086b-4e0f-a699-e129aedff69d/change-toggle-button-background-color-in-wpf-expander-control-->
        <ControlTemplate x:Key="Template1" TargetType="Expander">
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" DockPanel.Dock="Top" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStretch="{TemplateBinding Control.FontStretch}" FontStyle="{TemplateBinding Control.FontStyle}" FontWeight="{TemplateBinding Control.FontWeight}" Foreground="{TemplateBinding Control.Foreground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinHeight="0" MinWidth="0" Name="HeaderSite" Padding="{TemplateBinding Control.Padding}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Padding="{TemplateBinding Control.Padding}">
                                                <Grid SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="38" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Grid.Column="0" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                                                    <Rectangle Grid.Column="1" Height="38" Width="38" Fill="{StaticResource DarkThemeGray3}"/>
                                                    <Path Data="M3.5,0.5L11.5,7 3.5,14" Grid.Column="1" HorizontalAlignment="Center" Name="arrow" SnapsToDevicePixels="False" Stroke="White" StrokeThickness="4" VerticalAlignment="Center" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter Property="Path.Data"    TargetName="arrow" Value="M1,1.5L8,8.5 15,1.5" />
                                                </Trigger>
                                                <Trigger Property="UIElement.IsMouseOver"  Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="{StaticResource DarkThemeGray2}" />
                                                </Trigger>
                                                <Trigger Property="ButtonBase.IsPressed"   Value="True">
                                                    <Setter Property="Shape.Stroke" TargetName="arrow" Value="{StaticResource DarkThemeGray0}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" Name="ExpandSite" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed" />
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Expander.IsExpanded" Value="True">
                    <Setter Property="UIElement.Visibility" TargetName="ExpandSite" Value="Visible" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
